version: '3.8'

services:
  kafka:
    image: bitnami/kafka:4.0.0
    environment:
      # Configure Kafka to act as both a broker and controller (KRaft mode)
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      # Setup listeners: PLAINTEXT for client communication and CONTROLLER for internal metadata
      - KAFKA_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"  # For client connections
      - "9093:9093"  # For internal controller communications

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    ports:
      - "5672:5672"  # RabbitMQ default messaging port
      - "15672:15672"  # RabbitMQ Management Console

  agent:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - rabbitmq
    environment:
      # Kafka Configuration
      - KAFKA_BROKER=kafka:9092
      - KAFKA_GROUP_ID=agent-group
      # RabbitMQ Configuration
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=admin
      - RABBITMQ_PASS=admin
      # Rule Synchronization API
      - RULE_API_URL=http://rule-api:port  # Placeholder for the Rule API
      # Health-check endpoint configuration
      - HEALTH_CHECK_PORT=8080
    ports:
      - "8080:8080"  # Health-check API/Agent status endpoint
